- name: proper wg_mode
  assert:
    that:
      - "wg_mode in ['apply-all', 'scale-clients']"
    msg: "'wg_mode' must be apply-all or scale-clients"
- include_tasks: "install_{{ ansible_distribution }}.yml"
- name: Create wireguard directory
  file:
    path: "/etc/wireguard"
    state: directory
    owner: root
    group: root
    mode: 0600
- name: "check private key existance"
  check_mode: no
  stat:
    path: "/etc/wireguard/{{ wg_interface }}.key"
  register: wg_private_key_stat
- name: Generate private keys
  shell: wg genkey > "/etc/wireguard/{{ wg_interface }}.key"
  register: wireguard_genkey
  when: (not wg_private_key_stat.stat.exists) or wg_regenerate_keys
- name: Read private key
  check_mode: no
  command: "cat /etc/wireguard/{{ wg_interface }}.key"
  register: wireguard_privkey
  changed_when: false
- name: "Set private key fact"
  set_fact:
    wg_private_key: "{{ wireguard_privkey.stdout }}"
- name: Generate public keys
  check_mode: no
  command: "wg pubkey"
  args:
    stdin: "{{ wg_private_key }}"
  register: wireguard_pubkey
  changed_when: false
- name: "Set facts"
  set_fact:
    wg_public_key: "{{ wireguard_pubkey.stdout }}"
    wg_private_ip: "{{ wg_private_ip }}"
    wg_public_ip: "{{ wg_public_ip }}"
    wg_port: "{{ wg_port }}"
    wg_cni: "{{ wg_cni }}"
- name: Configuring wireguard
  template:
    src: wg.conf.j2
    dest: "/etc/wireguard/{{ wg_interface }}.conf"
    owner: root
    group: root
    mode: 0600
    backup: yes
  notify: "restart wg"
  # when:  wg_mode == 'apply-all' or (wg_mode =='scale-clients' and wg_public_ip == '')
- name: Setup CNI plugin
  include_tasks: "cni.yml"
  when: wg_cni
- name: Integrate with wg operator
  include_tasks: "wg_operator.yml"
  when: wg_operator_manifest
- name: Starting wireguard
  systemd:
    name: "wg-quick@{{ wg_interface }}"
    enabled: yes
    state: started
